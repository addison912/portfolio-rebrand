{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@parcel/scope-hoisting/lib/prelude.js","./node_modules/@glidejs/glide/dist/glide.esm.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","var $parcel$modules = {};\nvar $parcel$bundles = {};\n\nif (parcelRequire == null) {\n  parcelRequire = function(name) {\n    // Execute the bundle wrapper function if there is one registered.\n    if (name in $parcel$bundles) {\n      let wrapper = $parcel$bundles[name];\n      delete $parcel$bundles[name];\n      wrapper();\n    }\n\n    if (name in $parcel$modules) {\n      return $parcel$modules[name];\n    }\n\n    // Try the node require function if it exists.\n    // Do not use `require` to prevent Webpack from trying to bundle this call\n    if (typeof module !== 'undefined' && typeof module.require === 'function') {\n      return module.require(name);\n    }\n\n    var err = new Error(\"Cannot find module '\" + name + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, exports) {\n    $parcel$modules[id] = exports;\n  };\n\n  parcelRequire.registerBundle = function registerBundle(id, fn) {\n    $parcel$bundles[id] = fn;\n    $parcel$modules[id] = {};\n  };\n\n  $parcel$global[parcelRequireName] = parcelRequire;\n}\n","/*!\n * Glide.js v3.4.1\n * (c) 2013-2019 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\n * Released under the MIT License.\n */\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\n   *\n   * @type {Number|Boolean}\n   */\n  perTouch: false,\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    slider: 'glide--slider',\n    carousel: 'glide--carousel',\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    cloneSlide: 'glide__slide--clone',\n    activeNav: 'glide__bullet--active',\n    activeSlide: 'glide__slide--active',\n    disabledArrow: 'glide__arrow--disabled'\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \" + msg);\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction isObject(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n\n/**\n * Indicates whether the specified value is a number.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n\n    return r[k], r;\n  }, {});\n}\n\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\nfunction mergeOptions(defaults, settings) {\n  var options = _extends({}, defaults, settings);\n\n  // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = _extends({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = _extends({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  createClass(EventsBus, [{\n    key: 'on',\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n      }\n\n      // Create the event's object if not yet created\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      }\n\n      // Add the handler to queue\n      var index = this.events[event].push(handler) - 1;\n\n      // Provide handle back for removal of event\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n      }\n\n      // If the event doesn't exist, or there's no handlers in queue, just leave\n      if (!this.hop.call(this.events, event)) {\n        return;\n      }\n\n      // Cycle through events queue, fire!\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n  return EventsBus;\n}();\n\nvar Glide = function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  createClass(Glide, [{\n    key: 'mount',\n    value: function mount$$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: 'mutate',\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'go',\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'move',\n    value: function move(distance) {\n      this._c.Transition.disable();\n      this._c.Move.make(distance);\n\n      return this;\n    }\n\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.disabled = true;\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      this.disabled = false;\n\n      return this;\n    }\n\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'isType',\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'settings',\n    get: function get$$1() {\n      return this._o;\n    }\n\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set$$1(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'index',\n    get: function get$$1() {\n      return this._i;\n    }\n\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set$$1(i) {\n      this._i = toInt(i);\n    }\n\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return this.settings.type;\n    }\n\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get$$1() {\n      return this._d;\n    }\n\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set$$1(status) {\n      this._d = !!status;\n    }\n  }]);\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        Glide.disable();\n\n        this.move = move;\n\n        Events.emit('run.before', this.move);\n\n        this.calculate();\n\n        Events.emit('run', this.move);\n\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset('<') || _this.isOffset('>')) {\n            _this._o = false;\n\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n\n          Glide.enable();\n        });\n      }\n    },\n\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Void}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction;\n\n\n      var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\n\n      switch (direction) {\n        case '>':\n          if (steps === '>') {\n            Glide.index = length;\n          } else if (this.isEnd()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = 0;\n            }\n          } else if (countableSteps) {\n            Glide.index += Math.min(length - Glide.index, -toInt(steps));\n          } else {\n            Glide.index++;\n          }\n          break;\n\n        case '<':\n          if (steps === '<') {\n            Glide.index = 0;\n          } else if (this.isStart()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = length;\n            }\n          } else if (countableSteps) {\n            Glide.index -= Math.min(Glide.index, toInt(steps));\n          } else {\n            Glide.index--;\n          }\n          break;\n\n        case '=':\n          Glide.index = steps;\n          break;\n\n        default:\n          warn('Invalid direction pattern [' + direction + steps + '] has been used');\n          break;\n      }\n    },\n\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index === 0;\n    },\n\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index === this.length;\n    },\n\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset(direction) {\n      return this._o && this.move.direction === direction;\n    }\n  };\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length;\n\n      // If the `bound` option is acitve, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction throttle(func, wait, options) {\n  var timeout = void 0,\n      context = void 0,\n      args = void 0,\n      result = void 0;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\n\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimentions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * (Components.Sizes.length - 1);\n    }\n  });\n\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\nfunction Html (Glide, Components) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.cloneSlide);\n      });\n    }\n  };\n\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\n      }\n    }\n  });\n\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this.offset = offset;\n\n      Events.emit('move', {\n        movement: this.value\n      });\n\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimentions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = this.slideWidth + 'px';\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n\n    /**\n     * Setups dimentions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper(dimention) {\n      Components.Html.wrapper.style.width = this.wrapperSize + 'px';\n    },\n\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the glide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.root.offsetWidth;\n    }\n  });\n\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of the single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimentions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n\n      this.typeClass();\n      this.activeClass();\n\n      Events.emit('build.after');\n    },\n\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.activeSlide);\n\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.activeSlide);\n        });\n      }\n    },\n\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var classes = Glide.settings.classes;\n\n      Components.Html.root.classList.remove(classes[Glide.settings.type]);\n\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(classes.activeSlide);\n      });\n    }\n  };\n\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimentions\n   * - on updating settings via API\n   */\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {Void}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes;\n\n\n      var peekIncrementer = +!!Glide.settings.peek;\n      var part = perView + peekIncrementer;\n      var start = slides.slice(0, part);\n      var end = slides.slice(-part);\n\n      for (var r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\n        for (var i = 0; i < start.length; i++) {\n          var clone = start[i].cloneNode(true);\n\n          clone.classList.add(classes.cloneSlide);\n\n          items.push(clone);\n        }\n\n        for (var _i = 0; _i < end.length; _i++) {\n          var _clone = end[_i].cloneNode(true);\n\n          _clone.classList.add(classes.cloneSlide);\n\n          items.unshift(_clone);\n        }\n      }\n\n      return items;\n    },\n\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n\n\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half, items.length);\n      var width = Components.Sizes.slideWidth + 'px';\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimentions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n\n  return Clones;\n}\n\nvar EventsBinder = function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  createClass(EventsBinder, [{\n    key: 'on',\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: 'off',\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\n\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n  Events.on('update', function () {\n    Direction.mount();\n  });\n\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Gaps.value * Glide.index;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n\n      Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\n    },\n\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    }\n  };\n\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n  Events.on('move', function (context) {\n    var gap = Components.Gaps.value;\n    var length = Components.Sizes.length;\n    var width = Components.Sizes.slideWidth;\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(width * (length - 1));\n      });\n\n      return Translate.set(-width - gap * length);\n    }\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(0);\n      });\n\n      return Translate.set(width * length + gap * length);\n    }\n\n    return Translate.set(context.movement);\n  });\n\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\n      }\n\n      return property + ' 0ms ' + settings.animationTimingFunc;\n    },\n\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      this.set();\n    },\n\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      this.set();\n    }\n  };\n\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n  Events.on('move', function () {\n    Transition.set();\n  });\n\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimentions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n  Events.on('run', function () {\n    Transition.enable();\n  });\n\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? { passive: true } : false;\n\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n\n        var swipe = this.touches(event);\n\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n\n        Events.emit('swipe.start');\n      }\n    },\n\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n\n\n        var swipe = this.touches(event);\n\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n\n          Components.Move.make(subExSx * toFloat(touchRatio));\n\n          Components.Html.root.classList.add(classes.dragging);\n\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var settings = Glide.settings;\n\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\n\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is positive and greater than threshold move backward.\n          if (settings.perTouch) {\n            steps = Math.min(steps, toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('<' + steps));\n        } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is negative and lower than negative threshold move forward.\n          if (settings.perTouch) {\n            steps = Math.max(steps, -toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('>' + steps));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(settings.classes.dragging);\n\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n\n        Events.emit('swipe.end');\n      }\n    },\n\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var settings = Glide.settings;\n\n      if (settings.swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (settings.dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      Components.Transition.enable();\n\n      return this;\n    },\n\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      Components.Transition.disable();\n\n      return this;\n    }\n  };\n\n  /**\n   * Add component class:\n   * - after initial building\n   */\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var detached = false;\n\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var prevented = false;\n\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n\n      this.bind();\n    },\n\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n\n          this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\n\n          this.items[i].removeAttribute('href');\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n\n          this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\n\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var capture = supportsPassive$1 ? { passive: true } : false;\n\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n\n      this.addBindings();\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.add(settings.classes.activeNav);\n\n        siblings(item).forEach(function (sibling) {\n          sibling.classList.remove(settings.classes.activeNav);\n        });\n      }\n    },\n\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.remove(Glide.settings.classes.activeNav);\n      }\n    },\n\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in driection precised in\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.preventDefault();\n\n      Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\n    }\n  };\n\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve('>'));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve('<'));\n      }\n    }\n  };\n\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n          }, this.time);\n        }\n      }\n    },\n\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        _this2.stop();\n      });\n\n      Binder.on('mouseout', Components.Html.root, function () {\n        _this2.start();\n      });\n    },\n\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n  Events.on(['run.after', 'play', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn('Breakpoints option must be an object');\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n  var settings = Glide.settings;\n\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n  var points = sortBreakpoints(settings.breakpoints);\n\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n  var defaults = _extends({}, settings);\n\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n  _extends(settings, Breakpoints.match(points));\n\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n\n    defaults = _extends({}, settings);\n  });\n\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide$1 = function (_Core) {\n  inherits(Glide$$1, _Core);\n\n  function Glide$$1() {\n    classCallCheck(this, Glide$$1);\n    return possibleConstructorReturn(this, (Glide$$1.__proto__ || Object.getPrototypeOf(Glide$$1)).apply(this, arguments));\n  }\n\n  createClass(Glide$$1, [{\n    key: 'mount',\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return get(Glide$$1.prototype.__proto__ || Object.getPrototypeOf(Glide$$1.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\n    }\n  }]);\n  return Glide$$1;\n}(Glide);\n\nexport default Glide$1;\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$bundles","parcelRequire","name","wrapper","module","require","err","Error","code","register","id","exports","registerBundle","fn","parcelRequireName","$0dbfe7eb78863f73ddd826d7fdf378a0$var$defaults","type","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perTouch","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","throttle","direction","peek","breakpoints","classes","ltr","rtl","slider","carousel","swipeable","dragging","cloneSlide","activeNav","activeSlide","disabledArrow","$0dbfe7eb78863f73ddd826d7fdf378a0$var$warn","msg","console","error","$0dbfe7eb78863f73ddd826d7fdf378a0$var$_typeof","Symbol","iterator","obj","constructor","prototype","$0dbfe7eb78863f73ddd826d7fdf378a0$var$classCallCheck","instance","Constructor","TypeError","$0dbfe7eb78863f73ddd826d7fdf378a0$var$createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","$0dbfe7eb78863f73ddd826d7fdf378a0$var$_extends","assign","arguments","source","hasOwnProperty","call","$0dbfe7eb78863f73ddd826d7fdf378a0$var$get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","$0dbfe7eb78863f73ddd826d7fdf378a0$var$possibleConstructorReturn","ReferenceError","$0dbfe7eb78863f73ddd826d7fdf378a0$var$toInt","parseInt","$0dbfe7eb78863f73ddd826d7fdf378a0$var$isString","$0dbfe7eb78863f73ddd826d7fdf378a0$var$isObject","$0dbfe7eb78863f73ddd826d7fdf378a0$var$isFunction","$0dbfe7eb78863f73ddd826d7fdf378a0$var$isUndefined","$0dbfe7eb78863f73ddd826d7fdf378a0$var$isArray","Array","$0dbfe7eb78863f73ddd826d7fdf378a0$var$mount","glide","extensions","events","components","_name","mount","$0dbfe7eb78863f73ddd826d7fdf378a0$var$define","prop","definition","$0dbfe7eb78863f73ddd826d7fdf378a0$var$mergeOptions","defaults","settings","options","$0dbfe7eb78863f73ddd826d7fdf378a0$var$EventsBus","EventsBus","this","hop","event","handler","on","index","push","remove","context","emit","forEach","item","$0dbfe7eb78863f73ddd826d7fdf378a0$var$Glide","Glide","selector","_c","_t","_e","disabled","transformers","pattern","Run","make","distance","Transition","disable","Move","interval","_o","set","o","_i","_d","status","$0dbfe7eb78863f73ddd826d7fdf378a0$var$now","Date","getTime","$0dbfe7eb78863f73ddd826d7fdf378a0$var$throttle","func","wait","timeout","args","result","previous","later","leading","apply","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","$0dbfe7eb78863f73ddd826d7fdf378a0$var$MARGIN_TYPE","$0dbfe7eb78863f73ddd826d7fdf378a0$var$siblings","node","parentNode","n","firstChild","matched","nextSibling","nodeType","$0dbfe7eb78863f73ddd826d7fdf378a0$var$exist","HTMLElement","$0dbfe7eb78863f73ddd826d7fdf378a0$var$TRACK_SELECTOR","$0dbfe7eb78863f73ddd826d7fdf378a0$var$EventsBinder","EventsBinder","listeners","el","closure","capture","addEventListener","removeEventListener","$0dbfe7eb78863f73ddd826d7fdf378a0$var$VALID_DIRECTIONS","$0dbfe7eb78863f73ddd826d7fdf378a0$var$FLIPED_MOVEMENTS",">","<","=","$0dbfe7eb78863f73ddd826d7fdf378a0$var$Rtl","Components","modify","translate","Direction","is","$0dbfe7eb78863f73ddd826d7fdf378a0$var$Gap","Gaps","$0dbfe7eb78863f73ddd826d7fdf378a0$var$Grow","Clones","grow","$0dbfe7eb78863f73ddd826d7fdf378a0$var$Peeking","Peek","before","$0dbfe7eb78863f73ddd826d7fdf378a0$var$Focusing","width","Sizes","slideWidth","$0dbfe7eb78863f73ddd826d7fdf378a0$var$supportsPassive","$0dbfe7eb78863f73ddd826d7fdf378a0$var$opts","e","$0dbfe7eb78863f73ddd826d7fdf378a0$var$supportsPassive$1","$0dbfe7eb78863f73ddd826d7fdf378a0$var$START_EVENTS","$0dbfe7eb78863f73ddd826d7fdf378a0$var$MOVE_EVENTS","$0dbfe7eb78863f73ddd826d7fdf378a0$var$END_EVENTS","$0dbfe7eb78863f73ddd826d7fdf378a0$var$MOUSE_EVENTS","$0dbfe7eb78863f73ddd826d7fdf378a0$var$sortBreakpoints","points","keys","sort","reduce","r","k","v","$0dbfe7eb78863f73ddd826d7fdf378a0$var$COMPONENTS","Html","root","track","querySelector","slides","slice","children","filter","slide","classList","contains","_r","document","t","Translate","Events","transform","TRANSFORMERS","concat","mutate","transformer","$0dbfe7eb78863f73ddd826d7fdf378a0$var$mutator","style","isType","isOffset","after","movement","compose","duration","transition","callback","enable","offset","resolve","token","split","join","addClass","add","removeClass","_v","indexOf","setupSlides","setupWrapper","dimention","wrapperSize","offsetWidth","reductor","len","marginLeft","marginRight","_this","items","collect","_Glide$settings","peekIncrementer","part","start","end","Math","max","floor","clone","cloneNode","_clone","unshift","append","_Components$Html","half","prepend","reverse","appendChild","_i2","insertBefore","_i3","removeChild","Resize","Binder","bind","unbind","off","destroy","Build","typeClass","activeClass","sibling","removeClasses","move","calculate","isStart","isEnd","steps","countableSteps","min","_m","step","substr","Swipe","swipeSin","swipeStartX","swipeStartY","passive","bindSwipeStart","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","stopPropagation","parseFloat","threshold","swipeDistance","swipeDeg","round","unbindSwipeMove","unbindSwipeEnd","unbindSwipeStart","_this2","_this3","changedTouches","Images","dragstart","preventDefault","Anchors","detached","prevented","_a","querySelectorAll","click","detach","draggable","setAttribute","getAttribute","removeAttribute","attach","Controls","_n","addBindings","setActive","removeActive","controls","removeBindings","elements","currentTarget","Keyboard","press","keyCode","Autoplay","setInterval","stop","time","clearInterval","Breakpoints","match","matchMedia","point","matches","$0dbfe7eb78863f73ddd826d7fdf378a0$export$default","_Core","Glide$$1","__proto__","subClass","superClass","create","setPrototypeOf","$0dbfe7eb78863f73ddd826d7fdf378a0$var$inherits"],"version":3,"file":"freelance.149054ee.js.map"}